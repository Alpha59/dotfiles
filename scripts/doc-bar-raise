#!/bin/bash

IN="$(mktemp)" || { echo "Failed to create temp file"; exit 1; }
OUT1="$(mktemp)" || { echo "Failed to create temp file"; exit 1; }
OUT2="$(mktemp)" || { echo "Failed to create temp file"; exit 1; }

# trap ctrl-c and call ctrl_c()
trap ctrl_c INT
quit=false;
function ctrl_c() {
    quit=true;
    exit 0;
}
input=$1;
if [[ -f "$input" ]]; then
    cat "$input" > "$OUT1";
    cat "$input" > "$IN";
else
    echo "$@" > "$OUT1";
    echo "$@" > "$IN";
fi

cat "$OUT1";
gum confirm "Is this the expected text?" --default=true --affirmative "Continue" --negative "Quit" && quit=false || quit=true;
if [[ "$quit" == "true" ]]; then
    exit 1;
fi

aspell -c "$OUT1";
mprocs "doc-bar-raise.js \"$(cat "$OUT1")\"" "vim "$OUT1"";
mprocs "weasel "$OUT1"" "passive "$OUT1"" "proselint "$OUT1"" "alex "$OUT1"" "languagetool --language en-US --disable "$disable" --json "$OUT1" | tee /dev/stderr | jq '.matches[] | .sentence,.message,.replacements[:3]';" "vim "$OUT1"";
mprocs "curl -X POST --header 'Content-Type: application/x-www-form-urlencoded' --silent --header 'Accept: application/json' -d \"language=en-US&username=jakeailor%40gmail.com&apiKey=pit-4EjnDzDjVQAk&enabledOnly=false&level=picky&disabledRules=WHITESPACE_RULE,DB_43438&text=$(cat $OUT1)\" 'https://api.languagetoolplus.com/v2/check' | jq '.matches[] | .sentence,.message,.replacements[:3]'" "vim "$OUT1"";

git diff --color-words "$IN" "$OUT1";
gum confirm "Accept All changes??" --default=true --affirmative "Yes" --negative "No" && accept=true || accept=false;

if [ "$accept" = "true" ]; then
    cat "$OUT1";
    if [[ -f "$1" ]]; then
        cat "$OUT1" > "$1";
    fi
else
    cat "$OUT1";
fi
