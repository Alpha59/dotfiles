#!/bin/bash

if [[ "$#" -lt 1 || "$#" -gt 2 ]] ; then
  echo "Usage: $0 <account> <region>"
  exit 1
fi

accountId=$1

if [[ -z $2 ]]; then
    region=$REGION;
else
    region=$2;
fi

aws-credentials "$accountId" "$region";

# Get Cluster Name
cluster_names=($(aws rds describe-db-clusters --region "$region" | jq -r ".DBClusters[].DBClusterIdentifier"));
if [ -z "$cluster_names" ]
then
    echo "Unable To Connect, Error Occurred. Please Check credentials";
    exit 1;
fi
for cluster_name in "${cluster_names[@]}"; do
    echo "Cluster Name: $cluster_name";
done

# Get Cluster ARN
cluster_arns=($(aws rds describe-db-clusters --region "$region" | jq -r ".DBClusters[].DBClusterArn"));
for cluster_arn in "${cluster_arns[@]}"; do
    echo "Cluster ARN: $cluster_arn";
done

# Get Cluster Instances (Array)
cluster_instances=($(aws rds describe-db-clusters --region "$region" | jq -r ".DBClusters[].DBClusterMembers[].DBInstanceIdentifier"));
for cluster_instance in "${cluster_instances[@]}"; do
    echo "Cluster Instances: $cluster_instance";
done

# Get Current Engine Type
engine_types=($(aws rds describe-db-clusters --region "$region" | jq -r ".DBClusters[].EngineVersion"));
for engine_type in "${engine_types[@]}"; do
    echo "Engine Type: $engine_type";
done


# Get Highest Available Engine
upgrade_versions=$(aws rds describe-db-clusters --region "$region" | jq ".DBClusters[].EngineVersion" | xargs -n1 aws rds describe-db-engine-versions --engine-version | jq -r ".DBEngineVersions[].ValidUpgradeTarget | last | .EngineVersion" | sort -u);
for upgrade_version in "${upgrade_versions[@]}"; do
    #upgrade_version="5.7.mysql_aurora.2.07.7";
    echo "Upgrade Version: $upgrade_version";
done

echo "Pending Maintenance";
pending_maints=($(aws rds describe-pending-maintenance-actions | jq -r ".PendingMaintenanceActions[].ResourceIdentifier"));
for pending_maint in "${pending_maints[@]}"; do
    echo "Pending Maintenance: $pending_maint";
done;
